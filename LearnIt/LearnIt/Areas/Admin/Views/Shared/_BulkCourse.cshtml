
@{
    Layout = "";
}
@model LearnIt.Areas.Admin.Models.AddCourseToPosDep

<h2>Bulk</h2>


@using (Html.BeginForm("BulkCourse", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="ui-widget">
        <label for="DepNameInputField"> Department: </label>
        @Html.TextBoxFor(model => model.Department, new { id = "DepNameInputField" })
    </div>
    <div class="ui-widget">
        <label for="PosNameInputField"> Possition: </label>
        @Html.TextBoxFor(model => model.Possition, new { id = "PosNameInputField" })
    </div>
    <div class="ui-widget">
        <label for="CourseNameInputField"> Course Name: </label>
        @Html.TextBoxFor(model => model.CourseName, new { id = "CourseNameInputField" })
    </div>
    <div class="ui-widget">
        <label for="DateInputField"> Due Date: </label>
        @Html.TextBoxFor(model => model.DueDate, new { id = "DateInputField" })
    </div>
    <div>
        @Html.LabelFor(m => m.IsMandatory)
        @Html.EditorFor(m => m.IsMandatory)
    </div>
    <div>
        <input type="submit" value="Save" />
    </div>
}


@Scripts.Render("~/bundles/jqueryajax")
<script>
    LearnItAutocomplete("#DepNameInputField", "DepNames",@Html.Raw(Json.Encode(ViewBag.courseDepPosNames.DepartmentList)));
    LearnItAutocomplete("#PosNameInputField", "PosNames",@Html.Raw(Json.Encode(ViewBag.courseDepPosNames.PossitionList)));
    LearnItAutocomplete("#CourseNameInputField", "CourseCoursenames",@Html.Raw(Json.Encode(ViewBag.courseDepPosNames.CourseNameList)));
    //there is also only a LearnItAutocomplete which uses only the first 3 variables and gives out suggestions in a
    //input field based on which field u want to use
</script>